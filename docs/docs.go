// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Stanley Hsieh",
            "email": "grimmh6838@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/email": {
            "post": {
                "description": "Send email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Send email",
                "parameters": [
                    {
                        "description": "Send email request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kol_delivery_http.SendEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty result"
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/kols": {
            "get": {
                "description": "List kols",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kol"
                ],
                "summary": "List kols",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_index",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "m",
                            "f"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "SexMale",
                            "SexFemale"
                        ],
                        "name": "sex",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "tag_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kol list",
                        "schema": {
                            "$ref": "#/definitions/kol_delivery_http.ListKolsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a kol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kol"
                ],
                "summary": "Update a kol",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kol ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update kol request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kol_delivery_http.UpdateKolRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty result"
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new kol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kol"
                ],
                "summary": "Create a new kol",
                "parameters": [
                    {
                        "description": "Create kol request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kol_delivery_http.CreateKolRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty result"
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/kols/{id}": {
            "get": {
                "description": "Get a kol by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kol"
                ],
                "summary": "Get a kol by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kol ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kol details",
                        "schema": {
                            "$ref": "#/definitions/kolresource_internal_kol_usecase.Kol"
                        }
                    },
                    "400": {
                        "description": "invalid kol id"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Login with admin credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Login admin",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_delivery_http.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin_delivery_http.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "description": "List products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kolresource_internal_kol_usecase.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Create product request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kol_delivery_http.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty result"
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Register a new admin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Register admin",
                "parameters": [
                    {
                        "description": "Register request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin_delivery_http.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty result"
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tags": {
            "get": {
                "description": "List tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "List tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kolresource_internal_kol_usecase.Tag"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "Create a new tag",
                "parameters": [
                    {
                        "description": "Create tag request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kol_delivery_http.CreateTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty result"
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/business.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin_delivery_http.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "user_name"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "admin_delivery_http.LoginResponse": {
            "type": "object",
            "properties": {
                "admin_name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "admin_delivery_http.RegisterRequest": {
            "type": "object",
            "required": [
                "name",
                "password",
                "user_name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "business.ErrorResponse": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                }
            }
        },
        "kol.Sex": {
            "type": "string",
            "enum": [
                "m",
                "f"
            ],
            "x-enum-varnames": [
                "SexMale",
                "SexFemale"
            ]
        },
        "kol_delivery_http.CreateKolRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "sex"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50
                },
                "sex": {
                    "enum": [
                        "m",
                        "f"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/kol.Sex"
                        }
                    ]
                },
                "social_media": {
                    "type": "string",
                    "maxLength": 255
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "kol_delivery_http.CreateProductRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "kol_delivery_http.CreateTagRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "kol_delivery_http.ListKolsResponse": {
            "type": "object",
            "properties": {
                "kols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/kolresource_internal_kol_usecase.Kol"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "kol_delivery_http.SendEmailRequest": {
            "type": "object",
            "required": [
                "email_content",
                "kol_ids",
                "product_id",
                "subject"
            ],
            "properties": {
                "email_content": {
                    "type": "string",
                    "minLength": 1
                },
                "kol_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "product_id": {
                    "type": "string"
                },
                "subject": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "kol_delivery_http.UpdateKolRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "sex"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "enum": [
                        "m",
                        "f"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/kol.Sex"
                        }
                    ]
                },
                "social_media": {
                    "type": "string",
                    "maxLength": 255
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "kolresource_internal_kol_usecase.Kol": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "$ref": "#/definitions/kol.Sex"
                },
                "social_media": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/kolresource_internal_kol_usecase.Tag"
                    }
                }
            }
        },
        "kolresource_internal_kol_usecase.Product": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "kolresource_internal_kol_usecase.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "KOL Resource API",
	Description:      "API Server for KOL Resource Management System",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
