version: '3.3'

services:
  postgresql:
    image: bitnami/postgresql:17.0.0
    container_name: postgresql
    environment:
      POSTGRESQL_USERNAME: root
      POSTGRESQL_PASSWORD: password
    volumes:
      - ./psql:/bitnami/postgresql
    ports:
      - 5432:5432
    networks:
      - main-tier
  # redis-single-node-cluster:
  #   container_name: redis
  #   image: docker.io/bitnami/redis-cluster:7.0
  #   environment:
  #     - 'ALLOW_EMPTY_PASSWORD=yes'
  #     - 'REDIS_CLUSTER_REPLICAS=0'
  #     - 'REDIS_NODES=127.0.0.1 127.0.0.1 127.0.0.1'
  #     - 'REDIS_CLUSTER_CREATOR=yes'
  #     - 'REDIS_CLUSTER_DYNAMIC_IPS=no'
  #     - 'REDIS_CLUSTER_ANNOUNCE_IP=127.0.0.1'
  #   ports:
  #     - '6379:6379'
  #   networks:
  #     - main-tier
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.7
  #   container_name: elasticsearch
  #   volumes:
  #     - ./elk:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   restart: always
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   networks:
  #     - main-tier
#  kibana:
#    depends_on:
#      - elasticsearch
#    image: docker.elastic.co/kibana/kibana:8.4.0
#    container_name: kibana
#    volumes:
#      - ./kibana:/usr/share/kibana/data
#    ports:
#      - 5601:5601
#    restart: always
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    networks:
#      - main-tier
  # mongo:
  #   image: mongo:6.0.7
  #   container_name: mongo
  #   restart: always
  #   volumes:
  #     - ./mongo:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #   ports:
  #     - 27017:27017
  #   networks:
  #     - main-tier
#  rabbitmq:
#    image: rabbitmq:3.12.7-management
#    hostname: rabbit
#    container_name: rabbitmq
#    restart: always
#    environment:
#      RABBITMQ_DEFAULT_USER: root
#      RABBITMQ_DEFAULT_PASS: password
##    volumes:
##      - ./rabbitmq/etc/enabled_plugins:/etc/rabbitmq/enabled_plugins
##    command: >
##      rabbitmq-plugins enable rabbitmq_mqtt
#    command: "/bin/bash -c \"rabbitmq-plugins enable --offline rabbitmq_mqtt rabbitmq_web_mqtt rabbitmq_amqp1_0; rabbitmq-server\""
#    ports:
#      - 1883:1883
#      - 5672:5672
#      - 15672:15672
#    networks:
#      - main-tier

#  jaeger:
#    image: jaegertracing/all-in-one:1.51
#    container_name: jaeger
#    restart: always
#    environment:
#      COLLECTOR_OTLP_ENABLED: true
#      SPAN_STORAGE_TYPE: elasticsearch
#      ES_SERVER_URLS: http://elasticsearch:9200
#    ports:
#      - 6831:6831/udp
#      - 6832:6832/udp
#      - 14268:14268
#      - 14269:14269
#      - 4317:4317
#      - 4318:4318
#      - 5778:5778
#      - 14250:14250
#      - 16686:16686
#      - 9411:9411
#    networks:
#      - main-tier

  # kafka:
  #   container_name: kafka
  #   image: docker.io/bitnami/kafka:3.6
  #   ports:
  #     - "19092:19092"
  #   environment:
  #     # KRaft settings
  #     - KAFKA_CFG_NODE_ID=0
  #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CLIENT://:19092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,CLIENT://localhost:19092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CLIENT:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #   volumes:
  #     - ./kafka:/bitnami
  #   networks:
  #     - main-tier

#  kafka-0:
#    image: docker.io/bitnami/kafka:3.6
#    ports:
#      - "19093:19093"
#    environment:
#      # KRaft settings
#      - KAFKA_ENABLE_KRAFT=yes
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
#      - KAFKA_KRAFT_CLUSTER_ID=A370i42nQuCtnpFN-7I41Q
#      # Listeners
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CLIENT://:19093,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,CLIENT://localhost:19093
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CLIENT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#      # Clustering
#      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
#      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
#      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
#      # SASL
#      - KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL=PLAIN
#      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
#      - KAFKA_CLIENT_USERS=user
#      - KAFKA_CLIENT_PASSWORDS=1234
#    volumes:
#      - ./kafka/0:/bitnami
#    networks:
#      - main-tier
#
#  kafka-1:
#    image: docker.io/bitnami/kafka:3.6
#    ports:
#      - "19094:19094"
#    environment:
#      # KRaft settings
#      - KAFKA_ENABLE_KRAFT=yes
#      - KAFKA_CFG_NODE_ID=1
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
#      - KAFKA_KRAFT_CLUSTER_ID=A370i42nQuCtnpFN-7I41Q
#      # Listeners
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CLIENT://:19094,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,CLIENT://localhost:19094
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CLIENT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#      # Clustering
#      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
#      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
#      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
#      # SASL
#      - KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL=PLAIN
#      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
#      - KAFKA_CLIENT_USERS=user
#      - KAFKA_CLIENT_PASSWORDS=1234
#    volumes:
#      - ./kafka/1:/bitnami
#    networks:
#      - main-tier
#
#  kafka-2:
#    image: docker.io/bitnami/kafka:3.6
#    ports:
#      - "19095:19095"
#    environment:
#      # KRaft settings
#      - KAFKA_ENABLE_KRAFT=yes
#      - KAFKA_CFG_NODE_ID=2
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
#      - KAFKA_KRAFT_CLUSTER_ID=A370i42nQuCtnpFN-7I41Q
#      # Listeners
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CLIENT://:19095,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,CLIENT://localhost:19095
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CLIENT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#      # Clustering
#      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
#      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
#      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
#      # SASL
#      - KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL=PLAIN
#      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
#      - KAFKA_CLIENT_USERS=user
#      - KAFKA_CLIENT_PASSWORDS=1234
#    volumes:
#      - ./kafka/2:/bitnami
#    networks:
#      - main-tier

#   kafka-ui:
#     container_name: kafka-ui
#     image: provectuslabs/kafka-ui:latest
#     ports:
#       - "19090:8080"
#     depends_on:
#       - kafka
# #      - kafka-0
# #      - kafka-1
# #      - kafka-2
#     environment:
#       #### Unsecure kafka cluster configuration ####
#       KAFKA_CLUSTERS_0_NAME: local
#       KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
# #      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-0:9092,kafka-1:9092,kafka-2:9092
#       DYNAMIC_CONFIG_ENABLED: true
#     networks:
#       - main-tier

networks:
  main-tier:
    driver: bridge